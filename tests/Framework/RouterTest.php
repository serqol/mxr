<?php

namespace Tests\Framework;
use Exceptions\NotFound;
use PHPUnit\Framework\TestCase;
use Framework\Router;
use Framework\Route;

class RouterTest extends TestCase {

    /**
     * @var Router
     */
    private $_router;

    protected function setUp() {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->_router = new Router();
    }

    public function testGetRoutes() {
        $this->assertTrue(gettype($this->_router->getRoutes()) === 'array');
    }

    /**
     * @param string $route
     * @param mixed $expected
     * @throws NotFound
     * @dataProvider matchDataProvider
     */
    public function testMatch($route, $expected) {
        $this->assertEquals($expected, $this->_router->match($route));
    }

    /**
     * @param $requestUri
     * @param $expected
     * @dataProvider matchDataProvider
     */
    public function testMatchNew($requestUri, $expected) {
        $this->assertEquals($expected, $this->_router->matchNew($requestUri));
    }

    /**
     * @return array
     */
    public function matchDataProvider() {
        return [
            ['/test',          new Route('main',    'Controllers\Main',           'test')],
            ['/auth/authorize', new Route('auth',    'Controllers\Authorization',  'authorize')],
        ];
    }
}